// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/category.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Category defines the supported categories.
// Full list supported by Douban are:
// - 书籍 book
// - 电影 movie
// - 音乐 music
// - 游戏 game
// - 移动应用 app
// - 评论 review
// - 小组 group (not supported)
// - 日记 note (not supported)
// - 图片 album (not supported)
// - 小站 site (not supported)
// - 同城活动 activity (not supported)
// - 舞台剧 drama (not supported)
// - 豆品 thing (not supported)
type Category int32

const (
	Category_book   Category = 0
	Category_movie  Category = 1
	Category_music  Category = 2
	Category_game   Category = 3
	Category_app    Category = 4
	Category_review Category = 5
)

var Category_name = map[int32]string{
	0: "book",
	1: "movie",
	2: "music",
	3: "game",
	4: "app",
	5: "review",
}

var Category_value = map[string]int32{
	"book":   0,
	"movie":  1,
	"music":  2,
	"game":   3,
	"app":    4,
	"review": 5,
}

func (x Category) String() string {
	return proto.EnumName(Category_name, int32(x))
}

func (Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1bfb247fa9b1cc73, []int{0}
}

func init() {
	proto.RegisterEnum("proto.Category", Category_name, Category_value)
}

func init() {
	proto.RegisterFile("proto/category.proto", fileDescriptor_1bfb247fa9b1cc73)
}

var fileDescriptor_1bfb247fa9b1cc73 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4e, 0x2c, 0x49, 0x4d, 0xcf, 0x2f, 0xaa, 0xd4, 0x03, 0x73, 0x85, 0x58, 0xc1,
	0x94, 0x96, 0x27, 0x17, 0x87, 0x33, 0x54, 0x42, 0x88, 0x83, 0x8b, 0x25, 0x29, 0x3f, 0x3f, 0x5b,
	0x80, 0x41, 0x88, 0x93, 0x8b, 0x35, 0x37, 0xbf, 0x2c, 0x33, 0x55, 0x80, 0x11, 0xcc, 0x2c, 0x2d,
	0xce, 0x4c, 0x16, 0x60, 0x02, 0xc9, 0xa7, 0x27, 0xe6, 0xa6, 0x0a, 0x30, 0x0b, 0xb1, 0x73, 0x31,
	0x27, 0x16, 0x14, 0x08, 0xb0, 0x08, 0x71, 0x71, 0xb1, 0x15, 0xa5, 0x96, 0x65, 0xa6, 0x96, 0x0b,
	0xb0, 0x3a, 0xa9, 0x46, 0x29, 0xa7, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea,
	0x67, 0x96, 0x14, 0xeb, 0xe6, 0x56, 0xea, 0xa6, 0x24, 0x96, 0x24, 0xea, 0xa7, 0xe4, 0x97, 0x26,
	0x25, 0x66, 0xeb, 0x83, 0x6d, 0x4c, 0x62, 0x03, 0x53, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x32, 0xb2, 0x10, 0x92, 0x97, 0x00, 0x00, 0x00,
}
